---
- name: Check azure_manage_postgresql_delete_option validation
  ansible.builtin.fail:
    msg: Please provide azure_manage_postgresql_delete_option as 'all' or 'server'
  when:
    - azure_manage_postgresql_delete_option is defined
    - azure_manage_postgresql_delete_option not in ['all', 'server']

- name: Delete PostgreSQL Server configuration settings
  azure.azcollection.azure_rm_postgresqlconfiguration:
    resource_group: "{{ azure_manage_postgresql_resource_group }}"
    server_name: "{{ azure_manage_postgresql_postgresql_name }}"
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: absent
  with_items: "{{ azure_manage_postgresql_postgresql_settings }}"
  when:
    - azure_manage_postgresql_delete_option is not defined

- name: Delete PostgreSQL Server Firewall rules
  azure.azcollection.azure_rm_postgresqlfirewallrule:
    resource_group: "{{ azure_manage_postgresql_resource_group }}"
    server_name: "{{ azure_manage_postgresql_postgresql_name }}"
    name: "{{ item.name }}"
    state: absent
  with_items: "{{ azure_manage_postgresql_postgresql_firewall_rules }}"
  when:
    - azure_manage_postgresql_delete_option is not defined

- name: Delete PostgreSQL Database instances
  azure.azcollection.azure_rm_postgresqldatabase:
    resource_group: "{{ azure_manage_postgresql_resource_group }}"
    server_name: "{{ azure_manage_postgresql_postgresql_name }}"
    name: "{{ item.name }}"
    force_update: "{{ item.force | default(omit) }}"
    state: absent
  with_items: "{{ azure_manage_postgresql_postgresql_database_instances }}"
  when:
    - azure_manage_postgresql_delete_option is not defined

- name: Delete PostgreSQL Server
  azure.azcollection.azure_rm_postgresqlserver:
    resource_group: "{{ azure_manage_postgresql_resource_group }}"
    name: "{{ azure_manage_postgresql_postgresql_name }}"
    state: absent
  when:
    - azure_manage_postgresql_delete_option is defined
    - azure_manage_postgresql_delete_option == 'server'

- name: Delete Resource group
  ansible.builtin.include_role:
    name: cloud.azure_ops.azure_manage_resource_group
  vars:
    azure_manage_resource_group_operation: delete
    azure_manage_resource_group_name: "{{ azure_manage_postgresql_resource_group }}"
    azure_manage_resource_group_force_delete_nonempty: true
    azure_manage_resource_group_force_delete_locked: true
  when:
    - azure_manage_postgresql_delete_option is defined
    - azure_manage_postgresql_delete_option == 'all'
